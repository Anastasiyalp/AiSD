#include <string>// интерфейс АТД "Бинарное дерево поиска"(в процедурно-модульной парадигме)namespace binSTree_modul{//-------------------------------------	typedef char base;	struct node {		base info;		unsigned int count;		unsigned int number;		node *lt;		node *rt;			// constructor			node () {count = 0; number = 0; lt = NULL; rt = NULL;}	};	typedef node *binSTree; // "представитель" бинарного дерева	binSTree Create(void);	bool isNull(binSTree);	base RootBT (binSTree); // для непустого бин.дерева	unsigned int RootCountBT (binSTree); // для непустого бин.дерева	binSTree Left (binSTree);// для непустого бин.дерева	binSTree Right (binSTree);// для непустого бин.дерева	void destroy (binSTree&);// специфика БДП	//вращения	void rotateR (binSTree &b);	void rotateL (binSTree &b);	// вставка в корень	void insInRoot (binSTree &b, base x);        void printBT(binSTree &b, int deep, std::string s);	void randomInsert(binSTree &b, base x);} // end of namespace binSTree_modul/*	1) RootBT: NonNullBT -> α;	2) Left: NonNullBT -> BT;	3) Right: NonNullBT -> BT;	4) Null: BT -> Boolean;	5) Create:  -> BT*/